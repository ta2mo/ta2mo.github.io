import{_ as i,x as n,z as a,J as c,B as l,C as d,g as o,y as r}from"./DWKNEfVt.js";const f={},v={class:"content is-medium"},b={class:"box"},u={class:"level"},h={class:"level-left is-left"},p={class:"level-item"},g={class:"level-right is-right"},m={class:"level-item"};function _(E,e){const s=o("adsbygoogle"),t=o("router-link");return r(),n("div",null,[a("div",v,[a("div",b,[e[0]||(e[0]=c('<span class="lable is-medium" data-v-b1575fed>2020-01-28</span><h1 id="2020-01-28-search-form-by-algolia" class="title" data-v-b1575fed>algoliaをつかってNuxt.jsのサイトに検索フォームをつけてみた</h1><div class="content" data-v-b1575fed><p data-v-b1575fed><a href="https://www.algolia.com/" rel="nofollow" data-v-b1575fed>algolia</a>を利用してこのブログにも検索フォームをつけてみました。<br data-v-b1575fed> 関連pull request： <a href="https://github.com/ta2mo/blog-maintenance/pull/22" rel="nofollow" data-v-b1575fed>use algolia #22</a>、<a href="https://github.com/ta2mo/blog-maintenance/pull/24" rel="nofollow" data-v-b1575fed>fix #23 #24</a></p><p data-v-b1575fed>追加実装した内容</p><ol data-v-b1575fed><li data-v-b1575fed>algoliaのインデックスを更新するコマンド追加</li><li data-v-b1575fed>検索フォームを設置 <ul data-v-b1575fed><li data-v-b1575fed>algoliaにリクエストする実装</li><li data-v-b1575fed>community planを利用しているのでalgoliaのlogoを表示(freeのプランの場合ダッシュボードに <code data-v-b1575fed>he Community (free) plan requires you to display the Algolia logo next to the search results.</code> と表示される)</li></ul></li></ol><h2 data-v-b1575fed><a name="algoliaのよかったところ" class="anchor" href="#algolia%E3%81%AE%E3%82%88%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D" rel="nofollow" aria-hidden="true" data-v-b1575fed><span class="octicon octicon-link" data-v-b1575fed></span></a> algoliaのよかったところ</h2><ul data-v-b1575fed><li data-v-b1575fed>検索元データになるindexはかんたんに作成できた。 <code data-v-b1575fed>model/post.go</code> にstructタグつけてライブラリでuploadしてやればおｋだった。CIでデプロイする前に作成している。</li><li data-v-b1575fed>ドキュメントがよかった。instantsearchに関してはvue/react/jsのそれぞれでexampleがあった</li><li data-v-b1575fed>ハイライトたすかる。ハイライト部分がマークアップされて帰ってくるのでそのまま表示していいかんじになる <ul data-v-b1575fed><li data-v-b1575fed>googleのサイト内検索的なのもできそう</li></ul></li></ul><h2 data-v-b1575fed><a name="ハマったところ" class="anchor" href="#%E3%83%8F%E3%83%9E%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D" rel="nofollow" aria-hidden="true" data-v-b1575fed><span class="octicon octicon-link" data-v-b1575fed></span></a> ハマったところ</h2><ul data-v-b1575fed><li data-v-b1575fed>20KBを超えるrecordをアップロードしようとしたらsize overのエラーで怒られた <ul data-v-b1575fed><li data-v-b1575fed>post本文のhtmlのタグを削除したrecordデータにした</li></ul></li><li data-v-b1575fed>algoliaのwidgetを利用してロゴを表示しようとしたところ <code data-v-b1575fed>ReferenceError &gt; location is not defined</code> とエラーが出た。静的サイトなので <code data-v-b1575fed>&lt;no-ssr&gt;</code> タグで囲んで対応した <ul data-v-b1575fed><li data-v-b1575fed><a href="https://github.com/algolia/vue-instantsearch/tree/master/examples/nuxt" rel="nofollow" data-v-b1575fed>https://github.com/algolia/vue-instantsearch/tree/master/examples/nuxt</a> のあたりを参考にした</li></ul></li></ul><h2 data-v-b1575fed><a name="感想" class="anchor" href="#%E6%84%9F%E6%83%B3" rel="nofollow" aria-hidden="true" data-v-b1575fed><span class="octicon octicon-link" data-v-b1575fed></span></a> 感想</h2><ul data-v-b1575fed><li data-v-b1575fed>現状はカテゴリーで分けてるけどタグつけてみてより検索しやすくしてみたい</li><li data-v-b1575fed>analyticsで検索ワードとかヒット率がみれるぽいので収益あがったら使ってみたい</li></ul></div>',3)),l(s)])]),a("nav",u,[a("div",h,[a("div",p,[l(t,{class:"is-right is-pulled-left",to:"/post/2020-02-06-open-github-url-from-intellij"},{default:d(()=>e[1]||(e[1]=[a("p",{class:"heading"},"←Newer",-1),a("span",null,"IntelliJで作業中のファイルをGithubで開く方法",-1)])),_:1,__:[1]})])]),a("div",g,[a("div",m,[l(t,{class:"is-left",to:"/post/2020-01-07-SES-issues"},{default:d(()=>e[2]||(e[2]=[a("p",{class:"heading"},"Older→",-1),a("span",null,"現場エンジニアからみたSESの問題点",-1)])),_:1,__:[2]})])])])])}const w=i(f,[["render",_],["__scopeId","data-v-b1575fed"]]);export{w as default};
